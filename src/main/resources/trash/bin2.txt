 @GetMapping("/sidebar")
    public String getSidebarContent(HttpSession session, Model model) {
        String token = (String) session.getAttribute("spotifyToken");
        System.out.println("token"+token);
//        model.addAttribute("userData", session.getAttribute("userData"));

        if (token == null) {
            return "component/sidebar :: profileSidebar";
        }

        RestTemplate restTemplate = new RestTemplate();
        HttpHeaders headers = new HttpHeaders();
        headers.set("Authorization", "Bearer " + token);
        try {
            ResponseEntity<Map> response = restTemplate.exchange(
                    "https://api.spotify.com/v1/me/following?type=artist&limit=5",
                    HttpMethod.GET,
                    new HttpEntity<>(headers),
                    Map.class
            );

            if (response.getStatusCode().is2xxSuccessful()) {
                //=========response============
                Map<String, Object> followedArtists = response.getBody();
                Map<String, Object> artists = (Map<String, Object>) followedArtists.get("artists");
                session.setAttribute("artists", artists);
//                model.addAttribute("artists", artists);
//
                System.out.println("artists"+artists);
            }else {
                model.addAttribute("error", "Spotify API failed");
            }
            return "component/sidebar :: profileSidebar";
        } catch (HttpClientErrorException | HttpServerErrorException ex) {
            System.out.println("Spotify API error: " + ex.getStatusCode() + " - " + ex.getResponseBodyAsString());
            model.addAttribute("error", "Spotify API failed: " + ex.getMessage());
            return "component/sidebar :: profileSidebar";
        }
    }
